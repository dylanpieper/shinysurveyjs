% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/server_utils.R
\name{survey_setup}
\alias{survey_setup}
\title{Setup Global Survey Environment and Database Connection}
\usage{
survey_setup(db_config, shiny_config = NULL, workers = 2L)
}
\arguments{
\item{db_config}{A list containing database configuration parameters:
\itemize{
\item \strong{host}: Database host address
\item \strong{port}: Database port number
\item \strong{db_name}: Name of the database
\item \strong{user}: Database username
\item \strong{password}: Database password
\item \strong{write_table}: Name of the table for write operations
}}

\item{shiny_config}{Optional list of Shiny configuration parameters to be passed
to configure_shiny function. If provided, these settings will be applied
before database initialization.}

\item{workers}{Number of workers for parallel processing. Default is 3.}
}
\value{
Invisibly returns the database pool object. The pool is also assigned to
'app_pool' in the global environment.

Invisibly returns the initialized database pool object
}
\description{
Setup the global survey environment by creating database connections,
environment variables, and a future asynchronous processing plan. The function:
\itemize{
\item Validates database configuration parameters
\item Sets required environment variables if not already present
\item Configures optional Shiny settings
\item Establishes a global database connection pool
\item Sets up asynchronous processing using future package with OS-specific configuration
}
}
\details{
The function performs several initialization steps:
\itemize{
\item Validates the write_table parameter is a non-empty string
\item Checks for required database configuration fields
\item Sets environment variables (\strong{HOST}, \strong{PORT}, \strong{DB_NAME}, \strong{USER}, \strong{PASSWORD}) if not present
\item Applies optional Shiny configuration
\item Creates a global database connection pool if it doesn't exist
\item Initializes future package for asynchronous operations based on OS
}

Environment variables are only set if they don't already exist, preserving
any existing configurations.
}
\section{Database Pool}{

The database pool is created using the \code{db_pool_open} function and stored in
the global environment as 'app_pool'. If a pool already exists, it is
not recreated.
}

\section{Asynchronous Processing}{

The function detects the operating system and sets up the appropriate future plan:
\itemize{
\item \strong{Windows}: Uses \code{multisession}
\item \strong{macOS}: Uses \code{multicore} if supported, falls back to \code{multisession}
\item \strong{Linux}: Uses \code{multicore} if supported, falls back to \code{multisession}
}
}

\keyword{internal}
