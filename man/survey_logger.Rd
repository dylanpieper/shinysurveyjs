% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/logger.R
\name{survey_logger}
\alias{survey_logger}
\title{Shiny App Logger Class}
\format{
An R6 class object
}
\description{
An R6 class that provides asynchronous logging functionality for shiny app messages.
}
\details{
This class handles asynchronous logging of shiny app messages to a PostgreSQL database.
It uses connection pooling and futures for efficient database operations. The class maintains
a single logging table per instance and handles all database connections internally.
}
\section{Message Types}{

The logger supports different message types that are displayed with distinct visual styles:
\describe{
\item{INFO}{Regular informational messages (displayed in green)}
\item{WARN}{Warning messages (displayed in yellow)}
\item{ERROR}{Error messages (displayed in red)}
}
}

\section{Public Fields}{

\describe{
\item{log_table}{character. Name of the database table for logging}
\item{session_id}{character. Unique identifier for the current session}
\item{survey_name}{character. Name of the survey being logged}
\item{db_params}{list. Database connection parameters}
\item{suppress_logs}{logical. Whether to suppress logs from console output}
}
}

\section{Methods}{

\describe{
\item{initialize(log_table, session_id, survey_name, suppress_logs = FALSE)}{
Creates a new logger instance
\describe{
\item{log_table}{character. Name of the logging table}
\item{session_id}{character. Unique session identifier}
\item{survey_name}{character. Name of the survey}
\item{suppress_logs}{logical. Whether to suppress console output}
\item{db_config}{list. Optional database configuration parameters}
}
}
\item{log_message(message, type = "INFO", zone = "DEFAULT")}{
Logs a message asynchronously with appropriate visual styling
\describe{
\item{message}{character. Message to log}
\item{type}{character. Type of message ("INFO", "WARN", "ERROR")}
\item{zone}{character. Zone identifier for message categorization}
}
}
}
}

\examples{
\dontrun{
# Initialize logger with console output
logger <- survey_logger$new(
  log_table = "survey_app_logs",
  session_id = "user123",
  survey_name = "customer_feedback"
)

# Initialize logger without console output
quiet_logger <- survey_logger$new(
  log_table = "survey_app_logs",
  session_id = "user123",
  survey_name = "customer_feedback",
  suppress_logs = TRUE
)

# Log different types of messages
logger$log_message("Survey started", "INFO", "initialization")
logger$log_message("Missing optional field", "WARN", "validation")
logger$log_message("Required field empty", "ERROR", "validation")
}
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{log_table}}{Name of the database table for logging}

\item{\code{session_id}}{Unique identifier for the current session}

\item{\code{survey_name}}{Name of the survey being logged}

\item{\code{db_params}}{List of database connection parameters}

\item{\code{suppress_logs}}{Whether to suppress console output}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-survey_logger-new}{\code{survey_logger$new()}}
\item \href{#method-survey_logger-log_message}{\code{survey_logger$log_message()}}
\item \href{#method-survey_logger-clone}{\code{survey_logger$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-survey_logger-new"></a>}}
\if{latex}{\out{\hypertarget{method-survey_logger-new}{}}}
\subsection{Method \code{new()}}{
Initialize a new survey logger instance
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{survey_logger$new(log_table, session_id, survey_name, suppress_logs = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{log_table}}{character. Name of the logging table}

\item{\code{session_id}}{character. Unique session identifier}

\item{\code{survey_name}}{character. Name of the survey}

\item{\code{suppress_logs}}{logical. Whether to suppress console output}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-survey_logger-log_message"></a>}}
\if{latex}{\out{\hypertarget{method-survey_logger-log_message}{}}}
\subsection{Method \code{log_message()}}{
Log a message asynchronously to the database with appropriate visual styling
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{survey_logger$log_message(message, type = "INFO", zone = "DEFAULT")}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{message}}{character. Message to log}

\item{\code{type}}{character. Type of message ("INFO", "WARN", "ERROR")}

\item{\code{zone}}{character. Zone identifier for message categorization}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
invisible(NULL)
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-survey_logger-clone"></a>}}
\if{latex}{\out{\hypertarget{method-survey_logger-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{survey_logger$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
