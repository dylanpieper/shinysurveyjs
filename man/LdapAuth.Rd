% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/auth_ldap.R
\name{LdapAuth}
\alias{LdapAuth}
\title{LDAP Authentication for shinysurveyjs}
\description{
Simple LDAP authentication module that integrates with the survey() function
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{config}}{LDAP configuration}

\item{\code{authenticated}}{Authentication status}

\item{\code{user_info}}{User information
Initialize LDAP Authentication}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-LdapAuth-new}{\code{LdapAuth$new()}}
\item \href{#method-LdapAuth-ensure_session_table_once}{\code{LdapAuth$ensure_session_table_once()}}
\item \href{#method-LdapAuth-generate_auth_token}{\code{LdapAuth$generate_auth_token()}}
\item \href{#method-LdapAuth-create_session}{\code{LdapAuth$create_session()}}
\item \href{#method-LdapAuth-validate_session}{\code{LdapAuth$validate_session()}}
\item \href{#method-LdapAuth-cleanup_expired_sessions_silent}{\code{LdapAuth$cleanup_expired_sessions_silent()}}
\item \href{#method-LdapAuth-cleanup_expired_sessions}{\code{LdapAuth$cleanup_expired_sessions()}}
\item \href{#method-LdapAuth-logout_session}{\code{LdapAuth$logout_session()}}
\item \href{#method-LdapAuth-get_connection_params}{\code{LdapAuth$get_connection_params()}}
\item \href{#method-LdapAuth-authenticate}{\code{LdapAuth$authenticate()}}
\item \href{#method-LdapAuth-logout}{\code{LdapAuth$logout()}}
\item \href{#method-LdapAuth-clone}{\code{LdapAuth$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-LdapAuth-new"></a>}}
\if{latex}{\out{\hypertarget{method-LdapAuth-new}{}}}
\subsection{Method \code{new()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{LdapAuth$new(
  host,
  base_dn,
  port = 389,
  user_attr = "uid",
  domain = NULL,
  ssh_tunnel = NULL,
  db_ops = NULL,
  session_duration_days = 7,
  auth_table = "sjs_auth"
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{host}}{LDAP server hostname}

\item{\code{base_dn}}{Base Distinguished Name}

\item{\code{port}}{LDAP port (default: 389)}

\item{\code{user_attr}}{User attribute (default: "uid")}

\item{\code{domain}}{Domain for UPN binding (e.g., "pitt.edu")}

\item{\code{ssh_tunnel}}{Local port number for SSH tunnel (assumes tunnel already running, e.g., \code{ssh_tunnel = 3389})}

\item{\code{db_ops}}{Database operations object for session management}

\item{\code{session_duration_days}}{Number of days sessions remain valid (default: 7)}

\item{\code{auth_table}}{Name of authentication sessions table (default: "sjs_auth")
Ensure session table exists once during initialization (no read check)
Generate secure session auth_token
Create new session}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-LdapAuth-ensure_session_table_once"></a>}}
\if{latex}{\out{\hypertarget{method-LdapAuth-ensure_session_table_once}{}}}
\subsection{Method \code{ensure_session_table_once()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{LdapAuth$ensure_session_table_once()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-LdapAuth-generate_auth_token"></a>}}
\if{latex}{\out{\hypertarget{method-LdapAuth-generate_auth_token}{}}}
\subsection{Method \code{generate_auth_token()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{LdapAuth$generate_auth_token()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-LdapAuth-create_session"></a>}}
\if{latex}{\out{\hypertarget{method-LdapAuth-create_session}{}}}
\subsection{Method \code{create_session()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{LdapAuth$create_session(username)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{username}}{Username to create session for
Validate session auth_token}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-LdapAuth-validate_session"></a>}}
\if{latex}{\out{\hypertarget{method-LdapAuth-validate_session}{}}}
\subsection{Method \code{validate_session()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{LdapAuth$validate_session(auth_token)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{auth_token}}{Session auth_token to validate
Clean up expired sessions silently (no logging)
Clean up expired sessions
Remove specific session}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-LdapAuth-cleanup_expired_sessions_silent"></a>}}
\if{latex}{\out{\hypertarget{method-LdapAuth-cleanup_expired_sessions_silent}{}}}
\subsection{Method \code{cleanup_expired_sessions_silent()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{LdapAuth$cleanup_expired_sessions_silent()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-LdapAuth-cleanup_expired_sessions"></a>}}
\if{latex}{\out{\hypertarget{method-LdapAuth-cleanup_expired_sessions}{}}}
\subsection{Method \code{cleanup_expired_sessions()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{LdapAuth$cleanup_expired_sessions()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-LdapAuth-logout_session"></a>}}
\if{latex}{\out{\hypertarget{method-LdapAuth-logout_session}{}}}
\subsection{Method \code{logout_session()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{LdapAuth$logout_session(auth_token = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{auth_token}}{Session auth_token to remove
Get effective host and port (considering SSH tunnel)
Authenticate user credentials}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-LdapAuth-get_connection_params"></a>}}
\if{latex}{\out{\hypertarget{method-LdapAuth-get_connection_params}{}}}
\subsection{Method \code{get_connection_params()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{LdapAuth$get_connection_params()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-LdapAuth-authenticate"></a>}}
\if{latex}{\out{\hypertarget{method-LdapAuth-authenticate}{}}}
\subsection{Method \code{authenticate()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{LdapAuth$authenticate(username, password, logger = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{username}}{Username}

\item{\code{password}}{Password}

\item{\code{logger}}{Optional logger
Logout user}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-LdapAuth-logout"></a>}}
\if{latex}{\out{\hypertarget{method-LdapAuth-logout}{}}}
\subsection{Method \code{logout()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{LdapAuth$logout()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-LdapAuth-clone"></a>}}
\if{latex}{\out{\hypertarget{method-LdapAuth-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{LdapAuth$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
