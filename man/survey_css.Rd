% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/css.R
\name{survey_css}
\alias{survey_css}
\title{Generate Survey CSS with Theme Support}
\usage{
survey_css(
  primary = "#003594",
  primary_foreground = "#ffffff",
  mode = "light",
  css_string = NULL
)
}
\arguments{
\item{primary}{Character string specifying the primary color in hex format. This color
is used for buttons, selected states, and interactive elements. Default is "#003594".}

\item{primary_foreground}{Character string specifying the text color for primary elements
in hex format. This should provide sufficient contrast against the primary color.
Default is "#ffffff".}

\item{mode}{Character string specifying the color theme. Must be either "light" or "dark".
Default is "light".}

\item{css_string}{Optional character string containing custom CSS. If provided, the function
returns this string instead of generating new CSS. Default is NULL.}
}
\value{
A character string containing the complete CSS code for survey styling.
}
\description{
Creates CSS code for styling survey components with support for light and dark themes.
The function generates CSS variables and styles for various survey components including
buttons, inputs, questions, and navigation elements.
}
\details{
The function generates CSS that includes:
\itemize{
\item Root CSS variables for colors and themes
\item Component-specific styles for questions, inputs, and buttons
\item Theme-specific color variables for light and dark modes
\item Interactive states (hover, focus, disabled)
\item Special styling for navigation and completion buttons
}

The CSS is structured using CSS variables (custom properties) to maintain
consistency and enable dynamic theme switching.
}
\examples{
# Generate default light theme CSS
css <- survey_css()

# Generate dark theme CSS
dark_css <- survey_css(mode = "dark")

# Custom primary color with dark theme
custom_css <- survey_css(
  primary = "#FF0000",
  primary_foreground = "#FFFFFF",
  mode = "dark"
)

}
\keyword{internal}
