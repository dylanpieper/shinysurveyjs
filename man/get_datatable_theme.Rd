% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ui_utils.R
\name{get_datatable_theme}
\alias{get_datatable_theme}
\title{Style DataTable Based on Theme Mode}
\usage{
get_datatable_theme(
  mode = "light",
  theme_color = "#003594",
  container_bg = NULL,
  text_color = NULL
)
}
\arguments{
\item{mode}{String. Theme mode, either "light" or "dark". Default: "light".}

\item{theme_color}{String. Hex color code for primary theme color.
Default: "#0275d8".}

\item{container_bg}{String. Background color hex code for table container.
Default: "#FFFFFF" for light, "#242424" for dark.}

\item{text_color}{String. Text color hex code.
Default: "#000000" for light, "#FFFFFF" for dark.}
}
\value{
List of DataTable options and callback JavaScript for styling:
\itemize{
\item \code{options}: List of datatable initialization options
\item \code{callback}: JavaScript function for row hover effects
}
}
\description{
Creates a consistent styling configuration for DataTables that matches
the application's theme mode (light/dark) and color scheme.
}
\examples{
\dontrun{
# Light mode table
DT::datatable(mtcars,
  options = get_datatable_theme()$options,
  callback = get_datatable_theme()$callback
)

# Dark mode table with custom color
theme <- get_datatable_theme(
  mode = "dark",
  theme_color = "#003594"
)
DT::datatable(mtcars,
  options = theme$options,
  callback = theme$callback
)
}

}
\keyword{internal}
